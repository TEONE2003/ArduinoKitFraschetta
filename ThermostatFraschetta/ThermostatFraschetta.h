#ifndef ThermostatFraschetta_h
#define ThermostatFraschetta_h
#include <ReleFraschetta.h>
#include <VirtualCycleFraschetta.h>
enum TIPO_TERMOSTATO:boolean{RISCALDAMENTO=1,RAFFREDDAMENTO=0};
class TERMOSTATO:RELE,CicloVirtualeF{
 protected:
  TIPO_TERMOSTATO TIPO_T;
 public:
  uint8_t SOGLIA_TEMPERATURA=20;
 TERMOSTATO():RELE(){}
 TERMOSTATO(uint8_t PIN_R,TIPO_DIGITALE TIPORELE,TIPO_TERMOSTATO TIPO_T):RELE(PIN_R,TIPORELE),
 CicloVirtualeF(10,SECONDI){this->TIPO_T=TIPO_T;}
 void FUNZIONE_TERMOSTATO(uint8_t TEMPERATURA_ATTUALE){
  if(TICK()){
   if(RISCALDAMENTO){if(TEMPERATURA_ATTUALE<SOGLIA_TEMPERATURA){ACCENDI();} else{SPEGNI();}}
   else{if(TEMPERATURA_ATTUALE>SOGLIA_TEMPERATURA){ACCENDI();} else {SPEGNI();}}
  }
}
};

class TERMOSTATO_BISTADIO{
 protected:
  TERMOSTATO TERM_RISC,TERM_RAFF;
 public:
  TERMOSTATO_BISTADIO(uint8_t PIN_RISCALDAMENTO,uint8_t PIN_RAFFREDDAMENTO,TIPO_DIGITALE TIPORELE){
   TERM_RISC = TERMOSTATO(PIN_RISCALDAMENTO,TIPORELE,RISCALDAMENTO);
   TERM_RAFF = TERMOSTATO(PIN_RAFFREDDAMENTO,TIPORELE,RAFFREDDAMENTO);
  }
  TERMOSTATO_BISTADIO(uint8_t PIN_RISCALDAMENTO,uint8_t PIN_RAFFREDDAMENTO,TIPO_DIGITALE TIPORELE_RISCALDAMENTO,TIPO_DIGITALE TIPORELE_RAFFREDDAMENTO){
   TERM_RISC = TERMOSTATO(PIN_RISCALDAMENTO,TIPORELE_RISCALDAMENTO,RISCALDAMENTO);
   TERM_RAFF = TERMOSTATO(PIN_RAFFREDDAMENTO,TIPORELE_RAFFREDDAMENTO,RAFFREDDAMENTO);
  }
  void FUNZIONE_TERMOSTATO(uint8_t TEMPERATURA_ATTUALE){
   TERM_RISC.FUNZIONE_TERMOSTATO(TEMPERATURA_ATTUALE);
   TERM_RAFF.FUNZIONE_TERMOSTATO(TEMPERATURA_ATTUALE);
  }
  void IMPOSTA_SOGLIA_TEMPERATURA(uint8_t TEMPERATURA){
   TERM_RISC.SOGLIA_TEMPERATURA = TEMPERATURA;
   TERM_RISC.SOGLIA_TEMPERATURA = TEMPERATURA;
  }
  uint8_t SOGLIA_TEMPERATURA(){return TERM_RISC.SOGLIA_TEMPERATURA;}
};

#endif
